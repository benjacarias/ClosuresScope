*SCOPE*

Scope: Es el alcance que va a tener una variable dentro del código. En otras palabras, el Scope se encargará de decidir a que bloques de código va a acceder una variable.

<!--Scope Global:--> No están dentro de funciones o bloques, por lo tanto se puede acceder a ellas de manera global.

<!--Scope Local:--> Son las que se declaran dentro de las funciones y por lo tanto solo puede accederdonde fueron declaradas(en la funcion).

Acceder a una variable en un bloque de codigo una una funcion
y solamente en esta estructura, solo se podra llamar en esta estructura

<!--Con let y const no podremos asignar un nuevo valor-->

Las variables globales son aquellas que se encuentran declaradas dentro de los bloques de código o funciones y sí importa si son declaradas con var, let o const, ya que var no tiene un scope local de bloque.

El scope local es el entorno donde las variables locales solo se pueden acceder desde una estructura de código del programa. Este entorno se divide en scope de función y scope de bloque.

<!--Ambito lexico-->

Lexical Scope / Ámbito Léxico: El intérprete de JavaScript funciona desde el ámbito de ejecución actual y funciona hasta encontrar la variable en cuestión. Si la variable no se encuentra en ningún ámbito, se genera una excepción.

Este tipo de búsqueda se llama ámbito léxico. El alcance de una variable se define por su ubicación dentro del código fuente, y las funciones anidadas tienen acceso a las variables declaradas en su alcance externo. No importa de dónde se llame una función, o incluso cómo se llama, su alcance léxico depende solo de dónde se declaró la función.

El ambito lexico: se refiere a que una funcion puede acceder a una funcion o variable fuera de ella.Cada nivel interno puede acceder a sus niveles externos hasta poder alcanzarlas.


<!---->